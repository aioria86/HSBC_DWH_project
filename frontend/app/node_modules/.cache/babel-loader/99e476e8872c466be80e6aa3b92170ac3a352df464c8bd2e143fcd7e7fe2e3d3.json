{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Graficos.js\";\nimport React from 'react';\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graficos = ({\n  ventas = []\n}) => {\n  if (ventas.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center\",\n    children: \"No hay datos para mostrar.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 35\n  }, this);\n\n  // Agrupamos ventas por año\n  const ventasPorAño = ventas.reduce((acc, v) => {\n    const año = new Date(v.tiempo.fecha).getFullYear();\n    acc[año] = (acc[año] || 0) + 1;\n    return acc;\n  }, {});\n  const dataBarra = Object.entries(ventasPorAño).map(([año, total]) => ({\n    año,\n    total\n  }));\n\n  // Agrupamos ingresos por mes\n  const ingresosPorMes = ventas.reduce((acc, v) => {\n    const fecha = new Date(v.tiempo.fecha);\n    const key = `${fecha.getFullYear()}-${fecha.getMonth() + 1}`;\n    acc[key] = (acc[key] || 0) + parseFloat(v.total);\n    return acc;\n  }, {});\n  const dataLinea = Object.entries(ingresosPorMes).map(([mes, total]) => ({\n    mes,\n    total\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-3\",\n      children: \"Ventas por A\\xF1o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: dataBarra,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"a\\xF1o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"total\",\n          fill: \"#d6001c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mt-5 mb-3\",\n      children: \"Ingresos por Mes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: dataLinea,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"mes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"total\",\n          stroke: \"#0071c5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Graficos;\nexport default Graficos;\nvar _c;\n$RefreshReg$(_c, \"Graficos\");","map":{"version":3,"names":["React","BarChart","Bar","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Graficos","ventas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ventasPorAño","reduce","acc","v","año","Date","tiempo","fecha","getFullYear","dataBarra","Object","entries","map","total","ingresosPorMes","key","getMonth","parseFloat","dataLinea","mes","width","height","data","strokeDasharray","dataKey","fill","type","stroke","_c","$RefreshReg$"],"sources":["/app/src/components/Graficos.js"],"sourcesContent":["import React from 'react';\r\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst Graficos = ({ ventas = [] }) => {\r\n  if (ventas.length === 0) return <p className=\"text-center\">No hay datos para mostrar.</p>;\r\n\r\n  // Agrupamos ventas por año\r\n  const ventasPorAño = ventas.reduce((acc, v) => {\r\n    const año = new Date(v.tiempo.fecha).getFullYear();\r\n    acc[año] = (acc[año] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const dataBarra = Object.entries(ventasPorAño).map(([año, total]) => ({ año, total }));\r\n\r\n  // Agrupamos ingresos por mes\r\n  const ingresosPorMes = ventas.reduce((acc, v) => {\r\n    const fecha = new Date(v.tiempo.fecha);\r\n    const key = `${fecha.getFullYear()}-${fecha.getMonth() + 1}`;\r\n    acc[key] = (acc[key] || 0) + parseFloat(v.total);\r\n    return acc;\r\n  }, {});\r\n  const dataLinea = Object.entries(ingresosPorMes).map(([mes, total]) => ({ mes, total }));\r\n\r\n  return (\r\n    <div className=\"my-5\">\r\n      <h4 className=\"text-center mb-3\">Ventas por Año</h4>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart data={dataBarra}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"año\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"total\" fill=\"#d6001c\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h4 className=\"text-center mt-5 mb-3\">Ingresos por Mes</h4>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={dataLinea}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"mes\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"total\" stroke=\"#0071c5\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graficos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}